import React, { useState, useEffect } from "react";
// BU BOLUMDE TUM FONSKIYONLAR APP.JSX İÇİNE YAZILDI PARÇALANMADI...
//ENES KARATAŞ 2321032069


// Arama bileşeni
function Arama(props) {
  return (
    <input
      type="text"
      placeholder="Kitap adı arayın..."
      value={props.aramaMetni}
      onChange={function (e) {
        // Arama metni değiştiğinde hem state'i hem de Local Storage'ı günceller
        props.setAramaMetniVeKaydet(e.target.value);
      }}
      style={{ display: "block", marginBottom: "10px" }}
    />
  );
}

// Kategori seçme 
function Kategoriler(props) {
  return (
    <select
      value={props.kategori}
      onChange={function (e) {
        props.setKategori(e.target.value);
      }}
      style={{ display: "block", marginBottom: "10px" }}
    >
      <option value="Tümü">Tümü</option>
      <option value="Klasik">Klasik</option>
      <option value="Bilim Kurgu">Bilim Kurgu</option>
      <option value="Eğitim">Eğitim</option>
    </select>
  );
}

// Tek kitap kartı
function KitapBilgi(props) {
  return (
    <div style={{ border: "1px solid gray", padding: "8px", margin: "6px" }}>
      <h3>{props.baslik}</h3>
      <p>{props.yazar}</p>
      <p>{props.kategori}</p>
      <button
        onClick={function () {
          props.toggleFavori(props.id);
        }}
      >
        {props.favorideMi ? "Favoriden Çıkar ⛔" : "Favoriye Ekle✅"}
      </button>
    </div>
  );
}

// Kitap listesi
function KitapListesi(props) {
  return (
    <div>
      {props.kitaplar.map(function (k) {
        return (
          <KitapBilgi
            key={k.id}
            id={k.id}
            baslik={k.baslik}
            yazar={k.yazar}
            kategori={k.kategori}
            favorideMi={props.favoriler.includes(k.id)}
            toggleFavori={props.toggleFavori}
          />
        );
      })}
    </div>
  );
}

// Favoriler paneli
function FavoriEkle(props) {
  var favoriKitaplar = props.kitaplar.filter(function (k) {
    return props.favoriler.includes(k.id);
  });

  return (
    <div style={{ border: "1px solid gray", padding: "8px", margin: "6px" }}>
      <h4>Favoriler ({favoriKitaplar.length})</h4>
      {favoriKitaplar.length === 0 ? (
        <p>Henüz favori kitabını seçmedin.</p>
      ) : (
        <ul>
          {favoriKitaplar.map(function (k) {
            return <li key={k.id}>{k.baslik}</li>;
          })}
        </ul>
      )}
    </div>
  );
}

// 🏠 Ana bileşen
function App() {
  var kitaplar = [
    { id: 1, baslik: "Java Öğreniyorum", yazar: "Enes", kategori: "Klasik" },
    { id: 2, baslik: "CSS Dünyası", yazar: "Enes (2321032069)", kategori: "Bilim Kurgu" },
    { id: 3, baslik: "Hello World", yazar: "Elon MUSK", kategori: "Bilim Kurgu" },
    { id: 4, baslik: "Yapay Zeka Yardımıyla Site Tasarlama", yazar: "Enes KARATAŞ ve ChatGPT", kategori: "Fantastik" },
  ];

  var [aramaMetni, setAramaMetni] = useState("");
  var [kategori, setKategori] = useState("Tümü");
  var [favoriler, setFavoriler] = useState([]);

  // GÜVENLİ VERİ YÜKLEME (Sadece bir useEffect kaldı)
  useEffect(function () {
    const kayitliArama = localStorage.getItem("aramaMetni");
    const kayitliFavoriler = localStorage.getItem("favoriler");

    if (kayitliArama) {
      setAramaMetni(kayitliArama);
    }

    if (kayitliFavoriler) { // bu kısmı yapay zekadan aldım cunku sayfa yenılendıgınde sılınıyordu kayıtlar
      try {
        const parsedFavorites = JSON.parse(kayitliFavoriler);
        if (Array.isArray(parsedFavorites)) {
          setFavoriler(parsedFavorites);
        }
      } catch (e) {
        console.error("Favoriler yüklenirken JSON parse hatası:", e);
      }
    }
  }, []);

  // Arama metnini günceller ve hemen kaydeder
  function setAramaMetniVeKaydet(metin) {
    setAramaMetni(metin);
    localStorage.setItem("aramaMetni", metin);
  }

  // Favori ekle/çıkar 
  function toggleFavori(id) {
    let yeniFavoriler;
    
    if (favoriler.includes(id)) {
      yeniFavoriler = favoriler.filter(function (f) { return f !== id; });
    } else {
      yeniFavoriler = favoriler.concat(id);
    }

   
    setFavoriler(yeniFavoriler);
    
    // 2. Local Storage'a ANINDA YAZMA ZORLAMASI: bu kısımda da yapay zeka kullanıldı
    localStorage.setItem("favoriler", JSON.stringify(yeniFavoriler));
  }

  // Filtreleme yapma
  var filtreliKitaplar = kitaplar.filter(function (k) {
    var baslikUygun = k.baslik.toLowerCase().includes(aramaMetni.toLowerCase());
    var kategoriUygun = kategori === "Tümü" || k.kategori === kategori;
    return baslikUygun && kategoriUygun;
  });

  // Görünüm
  return (
    <div style={{ padding: "20px" }}>
      <h2> ☺️ KİTAPLIK 📚</h2>
      <Arama 
        aramaMetni={aramaMetni} 
        setAramaMetniVeKaydet={setAramaMetniVeKaydet} // Yeni fonksiyonu gönderiyoruz
      />
      <Kategoriler kategori={kategori} setKategori={setKategori} />
      <FavoriEkle kitaplar={kitaplar} favoriler={favoriler} />
      <KitapListesi
        kitaplar={filtreliKitaplar}
        favoriler={favoriler}
        toggleFavori={toggleFavori}
      />
    </div>
  );
}

export default App;